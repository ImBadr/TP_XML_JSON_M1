*************************
**** TADJER BADR LS1 ****
*************************

_______________________________________________________________________________________________________________________
1) La racine du document. 
-> /AAA

_______________________________________________________________________________________________________________________
2) Les éléments CCC qui ont comme balise mère la racine. 
-> /AAA/CCC

_______________________________________________________________________________________________________________________
3) Les éléments BBB qui ont comme balise mère DDD et balise grand-mère la racine (AAA). 
-> //AAA/DDD/BBB

_______________________________________________________________________________________________________________________
4) Tous les éléments BBB quel qu’il soit leur position dans le fichier. 
-> //BBB

_______________________________________________________________________________________________________________________
5) Tous les BBB fils de DDD. 
-> //DDD/BBB

_______________________________________________________________________________________________________________________
6) Tous les fils de la racine. 
-> /AAA/*

_______________________________________________________________________________________________________________________
7) Tous les éléments BBB qui ont au moins un ancêtre. 
-> //*/BBB

_______________________________________________________________________________________________________________________
8) Tous les éléments BBB qui ont trois ancêtres. 
-> //*/*/*/BBB

_______________________________________________________________________________________________________________________
9) Tous les éléments dans le document. 
-> //*

_______________________________________________________________________________________________________________________
10) Le premier fils BBB de la racine du document. 
-> /AAA/BBB[position() = 1]

_______________________________________________________________________________________________________________________
11) Le dernier fils BBB de quelconque balise. 
-> //BBB[last()]

_______________________________________________________________________________________________________________________
12) Tous les attributs ID peu importe leur localisation dans les balises. 
-> //*/@id

_______________________________________________________________________________________________________________________
13) Les balises BBB qui ont un attribut NOM. 
-> //BBB[@nom]

_______________________________________________________________________________________________________________________
14) Les balises BBB qui ont un atribut NOM de valeur « toto ». 
-> //BBB[@nom="toto"]

_______________________________________________________________________________________________________________________
15) Toutes les balises BBB qui ont au moins un attribut. 
-> //BBB[count(@*) > 0]

_______________________________________________________________________________________________________________________
16) Toutes les balises BBB qui n’ont pas d’attributs. 
-> //BBB[count(@*) = 0]

_______________________________________________________________________________________________________________________
17) Tous les nœuds QQQ ayant l’attribut ID=’q1’ 
-> //QQQ[@id="q1"]

_______________________________________________________________________________________________________________________
18) Tous les éléments qui ont deux fils BBB. 
-> //*[count(BBB) = 2]

_______________________________________________________________________________________________________________________
19) Tous les éléments qui ont deux fils. 
-> //*[count(*) = 2]

_______________________________________________________________________________________________________________________
20) Tous le éléments qui ont un nom qui commence par ‘B’ (starts-with(name(),'B')) 
-> //*[starts-with(name(), 'B')]

_______________________________________________________________________________________________________________________
21) Tous les éléments qui ayant la lettre C dans leur nom (contains(name(),'C')) 
-> //*[contains(name(), 'C')]

_______________________________________________________________________________________________________________________
22) Tous les éléments ayant un nom de longueur 3 (string-length(name()) = 3) 
-> //*[string-length(name())= 3]

_______________________________________________________________________________________________________________________
23) Tus les éléments BBB ou CCC. 
-> //BBB|//CCC

_______________________________________________________________________________________________________________________
24) Le parent d’une balise BBB. 
-> //BBB/parent::*

_______________________________________________________________________________________________________________________
25) Tous les EEE fils de AAA et tous les BBB. 
-> //AAA/EEE|//BBB

_______________________________________________________________________________________________________________________
26) Les parents de type AAA d’un élément DDD. 
-> //DDD/parent::AAA

_______________________________________________________________________________________________________________________
27.a) Les voisins précédents de DDD. Les voisins suivant de DDD.
-> //DDD/preceding::/
-> //DDD/following::*

_______________________________________________________________________________________________________________________
28) Tous les ancêtres des tous les éléments QQQ. 
-> //QQQ/ancestor::*

_______________________________________________________________________________________________________________________
29) Tous les descendants des tous les éléments FFF. 
-> //FFF/descendant::*

_______________________________________________________________________________________________________________________
30) L’élément suivant de XXX. 
-> //XXX//following-sibling::*

_______________________________________________________________________________________________________________________
31) L’élément précédant XXX. 
-> //XXX//preceding-sibling::*

_______________________________________________________________________________________________________________________
32) Si FFF est fils de AAA alors chercher tous les éléments descendants de FFF et l’élément FFF lui-même. 
-> //AAA/FFF/descendant-or-self::*

_______________________________________________________________________________________________________________________
33) Tous les éléments BBB de deux en deux (fils du même élément).
-> (pas compris la question)
